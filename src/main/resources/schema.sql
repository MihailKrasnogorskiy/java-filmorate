CREATE TABLE IF NOT EXISTS films
(
    film_id      int GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    name         varchar NOT NULL,
    description  varchar NOT NULL,
    release_date date    NOT NULL,
    duration     int     NOT NULL,
    rating_id    int     NOT NULL
);

CREATE TABLE IF NOT EXISTS users
(
    user_id  int GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    email    varchar NOT NULL,
    login    varchar NOT NULL,
    name     varchar NOT NULL,
    birthday date    NOT NULL
);

CREATE TABLE IF NOT EXISTS likes
(
    id      int GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    user_id int NOT NULL,
    film_id int NOT NULL
);

CREATE TABLE IF NOT EXISTS genres
(
    genre_id int     NOT NULL,
    genre    varchar NOT NULL,
    CONSTRAINT pk_genres PRIMARY KEY (genre_id)
);

CREATE TABLE IF NOT EXISTS ratings
(
    rating_id int     NOT NULL,
    rating    varchar NOT NULL,
    CONSTRAINT pk_ratings PRIMARY KEY (rating_id)
);

CREATE TABLE IF NOT EXISTS friends
(
    id         int GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    user_id    int NOT NULL,
    friend     int NOT NULL,
    request_id int NOT NULL
);

CREATE TABLE IF NOT EXISTS requests
(
    request_id  int GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    outgoing_id int,
    incoming_id int,
    status      varchar NOT NULL
);

CREATE TABLE IF NOT EXISTS film_genres
(
    id       int GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    film_id  int NOT NULL,
    genre_id int NOT NULL
);

ALTER TABLE films
    ADD CONSTRAINT IF NOT EXISTS fk_films_rating_id FOREIGN KEY (rating_id)
        REFERENCES ratings (rating_id);

ALTER TABLE likes
    ADD CONSTRAINT IF NOT EXISTS fk_likes_user_id FOREIGN KEY (user_id)
        REFERENCES users (user_id);

ALTER TABLE likes
    ADD CONSTRAINT IF NOT EXISTS fk_likes_film_id FOREIGN KEY (film_id)
        REFERENCES films (film_id);

ALTER TABLE friends
    ADD CONSTRAINT IF NOT EXISTS fk_friends_user_id FOREIGN KEY (user_id)
        REFERENCES users (user_id);

ALTER TABLE friends
    ADD CONSTRAINT IF NOT EXISTS fk_friends_friend FOREIGN KEY (friend)
        REFERENCES users (user_id);

ALTER TABLE requests
    ADD CONSTRAINT IF NOT EXISTS fk_requests_outgoing_id FOREIGN KEY (outgoing_id)
        REFERENCES users (user_id);

ALTER TABLE requests
    ADD CONSTRAINT IF NOT EXISTS fk_requests_friend FOREIGN KEY (incoming_id)
        REFERENCES users (user_id);

ALTER TABLE friends
    ADD CONSTRAINT IF NOT EXISTS fk_friends_friendship_status FOREIGN KEY (request_id)
        REFERENCES requests (request_id);

ALTER TABLE film_genres
    ADD CONSTRAINT IF NOT EXISTS fk_film_genres_film_id FOREIGN KEY (film_id)
        REFERENCES films (film_id);

ALTER TABLE film_genres
    ADD CONSTRAINT IF NOT EXISTS fk_film_genres_genre_id FOREIGN KEY (genre_id)
        REFERENCES genres (genre_id);